"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSdk = exports.SubscribePersonalEventsDocument = exports.GetMediaByIdDocument = exports.GetTaskByIdDocument = exports.UploadMediaDocument = exports.CancelGenerationTaskDocument = exports.CreateGenerationTaskDocument = exports.AllEventsFragmentDoc = exports.TaskBaseFragmentDoc = exports.MediaBaseFragmentDoc = exports.MediaType = exports.MediaProvider = exports.ImageVariant = void 0;
var ImageVariant;
(function (ImageVariant) {
    ImageVariant["Public"] = "PUBLIC";
    ImageVariant["StillThumbnail"] = "STILL_THUMBNAIL";
    ImageVariant["Thumbnail"] = "THUMBNAIL";
})(ImageVariant || (exports.ImageVariant = ImageVariant = {}));
var MediaProvider;
(function (MediaProvider) {
    MediaProvider["Cf"] = "CF";
    MediaProvider["S3"] = "S3";
})(MediaProvider || (exports.MediaProvider = MediaProvider = {}));
var MediaType;
(function (MediaType) {
    MediaType["Image"] = "IMAGE";
    MediaType["Video"] = "VIDEO";
})(MediaType || (exports.MediaType = MediaType = {}));
exports.MediaBaseFragmentDoc = `
    fragment MediaBase on Media {
  id
  type
  width
  height
  urls {
    variant
    url
  }
  imageType
}
    `;
exports.TaskBaseFragmentDoc = `
    fragment TaskBase on Task {
  id
  userId
  parameters
  outputs
  status
  startedAt
  endAt
  createdAt
  updatedAt
}
    `;
exports.AllEventsFragmentDoc = `
    fragment AllEvents on Events {
  taskUpdated {
    ...TaskBase
  }
}
    `;
exports.CreateGenerationTaskDocument = `
    mutation createGenerationTask($parameters: JSONObject!) {
  createGenerationTask(parameters: $parameters) {
    ...TaskBase
  }
}
    ${exports.TaskBaseFragmentDoc}`;
exports.CancelGenerationTaskDocument = `
    mutation cancelGenerationTask($id: ID!) {
  cancelGenerationTask(id: $id) {
    ...TaskBase
  }
}
    ${exports.TaskBaseFragmentDoc}`;
exports.UploadMediaDocument = `
    mutation uploadMedia($input: UploadMediaInput!) {
  uploadMedia(input: $input) {
    uploadUrl
    externalId
    mediaId
    media {
      ...MediaBase
    }
  }
}
    ${exports.MediaBaseFragmentDoc}`;
exports.GetTaskByIdDocument = `
    query getTaskById($id: ID!) {
  task(id: $id) {
    ...TaskBase
  }
}
    ${exports.TaskBaseFragmentDoc}`;
exports.GetMediaByIdDocument = `
    query getMediaById($id: String!) {
  media(id: $id) {
    ...MediaBase
  }
}
    ${exports.MediaBaseFragmentDoc}`;
exports.SubscribePersonalEventsDocument = `
    subscription subscribePersonalEvents {
  personalEvents {
    ...AllEvents
  }
}
    ${exports.AllEventsFragmentDoc}
${exports.TaskBaseFragmentDoc}`;
function getSdk(requester) {
    return {
        createGenerationTask(variables, options) {
            return requester(exports.CreateGenerationTaskDocument, variables, options);
        },
        cancelGenerationTask(variables, options) {
            return requester(exports.CancelGenerationTaskDocument, variables, options);
        },
        uploadMedia(variables, options) {
            return requester(exports.UploadMediaDocument, variables, options);
        },
        getTaskById(variables, options) {
            return requester(exports.GetTaskByIdDocument, variables, options);
        },
        getMediaById(variables, options) {
            return requester(exports.GetMediaByIdDocument, variables, options);
        },
        subscribePersonalEvents(variables, options) {
            return requester(exports.SubscribePersonalEventsDocument, variables, options);
        }
    };
}
exports.getSdk = getSdk;
//# sourceMappingURL=graphql.js.map